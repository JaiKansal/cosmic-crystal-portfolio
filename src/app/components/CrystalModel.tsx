/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
...
Author: GenEugene (https://sketchfab.com/geneugene)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/crystal-stone-rock-1ad829e2f464446fa4945562ab611255
Title: Crystal stone (rock)
*/

import * as THREE from 'three'
import React, { useRef, useLayoutEffect } from 'react'
import { useGLTF, Text } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    Stone_low_1_Stone_low_1_0: THREE.Mesh
    pPlane1_lambert1_0: THREE.Mesh
  }
  materials: {
    Stone_low_1: THREE.MeshStandardMaterial
    lambert1: THREE.MeshStandardMaterial
  }
}

// --- Define our props ---
type CrystalModelProps = {
  position: [number, number, number];
  text: string;
  // --- We no longer need 'color' prop as we are using the original texture ---
  onClick: () => void;
  isActive: boolean;
};

export function CrystalModel({ position, text, onClick, isActive }: CrystalModelProps & React.JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/crystal-transformed.glb') as unknown as GLTFResult
  const groupRef = useRef<THREE.Group>(null!)

  // --- Modify the original material on load to make it glow ---
  useLayoutEffect(() => {
    // This is the original multi-color texture
    const originalMaterial = materials.Stone_low_1;
    
    // Add our glow properties to it
    originalMaterial.emissive = new THREE.Color("#ffffff"); // Glow with a white light
    originalMaterial.emissiveIntensity = 1.5; // Tuned-down glow
    originalMaterial.toneMapped = false; // Makes glow work better with bloom
    
  }, [materials.Stone_low_1]);

  // --- Add rotation ---
  useFrame(() => {
    if (groupRef.current) {
      groupRef.current.rotation.y += 0.005;
      groupRef.current.rotation.x += 0.005;
    }
  });

  return (
    <group 
      ref={groupRef}
      position={position}
      visible={!isActive}
      onClick={onClick}
      scale={0.455} 
      dispose={null}
    >
      {/* --- This is the crystal. We are using its ORIGINAL material --- */}
      <mesh 
        castShadow 
        receiveShadow 
        geometry={nodes.Stone_low_1_Stone_low_1_0.geometry} 
        material={materials.Stone_low_1} // <-- USE ORIGINAL TEXTURE
      />
      
      {/* --- The "square sheet" mesh is now GONE --- */}

      {/* --- Add the Text label back --- */}
      <Text
        position={[0, 2.5, 0]} 
        fontSize={0.4}
        color="white"
        anchorX="center"
        anchorY="middle"
        outlineColor="black"
        outlineWidth={0.02}
      >
        {text}
      </Text>
    </group>
  )
}

// --- Preload the correct transformed model ---
useGLTF.preload('/crystal-transformed.glb')